--- Information block for the plugin
PluginInfo = {
    Name = "Prusa Link",
    Version = "0.1",
    BuildVersion = "0.0.0.1",
    Id = "e778394d-6e3d-2489-be94-bcb44ts1c76e",
    Author = "Erik Carlson",
    Description = "Control and Monitoring of Prusa Printers"  
  }
  
  -- Define the color of the plugin object in the design
function GetColor(props)
    return { 224, 93, 45 }
  end
  
   -- Define User configurable Properties of the plugin
function GetProperties()
      local props = {}
      return props
    end
    
  -- The name that will initially display when dragged into a design
function GetPrettyName(props)
    return "Prusa Link " .. PluginInfo.Version
  end
  
  -- Optional function used if plugin has multiple pages
PageNames = { "Monitor" , "Control", "Setup" }  --List the pages within the plugin
function GetPages(props)
    local pages = {}
    for ix,name in ipairs(PageNames) do
      table.insert(pages, {name = PageNames[ix]})
    end
    return pages
  end

 -- Defines the Controls used within the plugin --*****STILL NEEDED--Puase print --Stop Print --Start Print --Delete File --WEB GUI HAS CONFIRMATION PAGE****
 function GetControls(props)
    local ctrls = {}
    table.insert(ctrls, { --Print
      Name = "Print",
      ControlType = "Button",
      ButtonType = "Trigger",
      Count = 1,
      UserPin = true,
      PinStyle = "Input",
      Icon = "Play",
      IconColor = {47,133,90}
    })
    table.insert(ctrls, { --Pause
      Name = "Pause",
      ControlType = "Button",
      ButtonType = "Trigger",
      Count = 1,
      UserPin = true,
      PinStyle = "Input",
      Icon = "Pause"
    })
    table.insert(ctrls, { --Stop
      Name = "Stop",
      ControlType = "Button",
      ButtonType = "Trigger",
      Count = 1,
      UserPin = true,
      PinStyle = "Input",
      Icon = "Stop"
    })
    table.insert(ctrls, { --Delete
      Name = "Delete",
      ControlType = "Button",
      ButtonType = "Trigger",
      Count = 1,
      UserPin = true,
      PinStyle = "Input",
      Icon = "X"
    })
    table.insert(ctrls, {
      Name = "Online",
      ControlType = "Button",
      ButtonType = "Trigger",
      Count = 1,
      UserPin = false,
      Icon = "Web"
    })
    table.insert(ctrls, { --Nozzle temp graph
      Name = "nGraph",
      ControlType = "Button",
      ButtonType = "Trigger",
      Count = 1,
    })
    table.insert(ctrls, { -- bed temp graph
      Name = "bGraph",
      ControlType = "Button",
      ButtonType = "Trigger",
      Count = 1,
    })
    table.insert(ctrls, {
      Name = "Job",
      ControlType = "Text",
      Count = 1,
      PinStyle = "Output",
      UserPin = true
    })
    table.insert(ctrls, {
        Name = "Progress",
        ControlType = "Text",
        Count = 1,
        PinStyle = "Output",
        UserPin = true
    })
    table.insert(ctrls, {
      Name = "Status",
      ControlType = "Text",
      Count = 1,
      PinStyle = "Output",
      UserPin = true
    })
    table.insert(ctrls, {
      Name = "Material",
      ControlType = "Text",
      Count = 1,
      PinStyle = "Output",
      UserPin = true,
      FontSize = 28
    })
    table.insert(ctrls, {
      Name = "Printer IP",
      ControlType = "Text",
      Count = 1,
      UserPin = false
    })
    table.insert(ctrls, {
        Name = "API Key",
        ControlType = "Text",
        Count = 1,
        UserPin = false
    })
    table.insert(ctrls, {
        Name = "Nozzle Temp",
        ControlType = "Knob",
        ControlUnit = "Float",
        Min = 0,
        Max = 300,
        Count = 1,
        UserPin = true,
        PinStyle = "Output",
    })
    table.insert(ctrls, {
        Name = "Nozzle Target",
        ControlType = "Knob",
        ControlUnit = "Float",
        Min = 0,
        Max = 300,
        Count = 1,
        UserPin = true,
        PinStyle = "Output",
    })
    table.insert(ctrls, {
        Name = "Bed Temp",
        ControlType = "Knob",
        ControlUnit = "Float",
        Min = 0,
        Max = 300,
        Count = 1,
        UserPin = true,
        PinStyle = "Output",
    })
    table.insert(ctrls, {
        Name = "Bed Target",
        ControlType = "Knob",
        ControlUnit = "Float",
        Min = 0,
        Max = 300,
        Count = 1,
        UserPin = true,
        PinStyle = "Output",
    })
    table.insert(ctrls, {
        Name = "Z Height",
        ControlType = "Knob",
        ControlUnit = "Integer",
        Min = 0,
        Max = 100
    })
    table.insert(ctrls, {
        Name = "Print Speed",
        ControlType = "Knob",
        ControlUnit = "Percent",
    })
    table.insert(ctrls, {
        Name = "Files",
        ControlType = "Text",
        ControlUnit = "Percent",
    })
    return ctrls
  end
  
  
--Layout of controls and graphics for the plugin UI to display
function GetControlLayout(props)
  
      function getImages()
          
          Nozzle = ""
                    
          Spool = ""          
          
          PrintSpeed = "iVBORw0KGgoAAAANSUhEUgAAADIAAAAmCAMAAACxpjgOAAAC5VBMVEVHcEz////////////////////////////////////////5aTD5aDD/////////////////////////////XS7/bST////////////////////////////////////////////////////////////////////7aDL/YED5aTL/gAD/gED6aDH6aDH6aDL4aTH/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////aiv////3ZjP7aDH6aDH6ZzH6aTL4aS77ZzH6aDH/ZjP6aDH2ZC75ay/6aDH6aDH6aDH6ZzH/AAD/ajX6aC/6aDD////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////5ZzL////5ZzH6aDH6aDH6aDL6aDH7ZzL6aDH6aDL5aDH6aDH6aTL6aDH/Yif5aDD7aTH/ZjP3aDD6aDH6aDH5aTH6aDH6aDH6aDD7aTL7aDL5aDL/VVX/Yyv7aDH6aDH////8aDL7ZzD8aTH7aDH6aDH6aDH7aTD7ZzH7ZzL5aDL/ZjP6aDH4ZS/7aDH6aDH6aDL6ZzH7aDH6aDH6aDH/ZCz6ZzH/aS37aDD/cTn6aTH6ajD////6aDG6qazCAAAA9XRSTlMA+/z5/R4BBfX4Alpb/vrTEOqFSwsHvFyfRPTUpb5TTRu6eFG5BkBCCC4CBPX3pE7ndDaH8y+TKmHsvTxGLE9sKI7b2u7EmoQckqYfqh0D65HZ90e4twxjHuTuLzgnQ5EK8xwruuzH7wEYNo6kQrPhf+bMstZaooNFK3OXNbvfP0nPbQuWPoHoCg84eyP2YF/Q1cAgxSWgmWWtbxLBiEqcXmh3OXxdhsmvgDfHap0HTlKKqDuMGiRIGVeJg2nFZ81I8di4+2b+DYmtBSC7jIHo/GU9e4ADEqz2TExFSbDhvHU5r4UZwibl2pBtc13tF14RQAmSMMj3WpIAAANHSURBVDjLhZVlQBVBEMeHeCAqKagoLdIIKmCCQQkGBkrYYmF3d3d3d3d3d3d3d+98dubiPe8d6n6Ym/3N/G/fzu7NA9CNGstS/OMTrKwS6vnXXe0D/x0+fsWFZjiu+Ldq0lwLoRvWtar+VeA0ylrkOSxjxuetGBapZOTzP5BRKCDgfsZ233wK6l45D0H+ZHmJ+h4NSppoyb2pdvKvG5PfXGGbKgt27TOP7K4mizrZmim6SNh3jwpyIyJyVX92YSnYU6OxKcrMYr20eIs3ZAoiFqBHcAspvMCB4x42f0i6MSnWgN32L9u0NUrav2tzRUpYItVhokkx1JLrtFOevEb8pUq+I96VaSXWWFRSFSO78rSQMvuE+FOVlEJ8pGBvfu2QccqsLC/qR06j5q4AQZ+x3Q9Z8i0cn9wGcGUMqzirr6wwWJHvSTsPeoqt3QDeI36FDh07doAPiLcA3FrjpSA6uBmUZldDkqSQa8XXqGk7xBehkPP24xf5Za+eZWVC6GPE7KY0K8dlq8Z8IW+srpTyvCViqRBwMxXmAoTQflo2kSYxXFYncpbzIrXljGbhGBasPeTG9zA8UNkBLzOPnER67qBnKNOIMCUMNWsqzsOwB2RDcsjUotRFdOO5eFTgs1mXLxJtpb7da5vqEXK7fuJ4I4Ct/CE4QRyfIt3d04jXzt8w/SAXF6N75+ZVRDwCsGUyJXvDYr6NxA+eIoyNjXnp6Ua3CUeOHiOP7+caWEdWemHmuWw8bFrF2dnktz1zspnx0OfDdLJT5Yjrof3GLIMQBuMkUK1iee4fMJZsZ/1HWkKIEnrqTsmRwAc5SB90ESJZT8vwYQJ3oWh9sKEQDfU0mpIdoALZ0fqgsxBpehpAyc5QnWycLmbgm147rx2KerCWbBVdrAhLiujwCKIbgRtFUZ1C6kN2vc35HKKboYpUau3oL3cuYVfOLMAtfhOsJGtv0EaS1GY8UMtn2hPbALZcstLa0HBV0kPL/QilUQNcSs9pNppQL1VSXINtHAklkVNZyB/MH8NDlfTRYG9G7uTU4ZNJ1MQmKP8z1mU0eBah+DrK9awYq/3RpXmfwn6AlsZWFGKK3PU9vXRn1q9wVNRgdx328qTN/wZD9Q5w096UGQAAAABJRU5ErkJggg=="

          ZHeight = "iVBORw0KGgoAAAANSUhEUgAAACUAAAAlCAMAAADyQNAxAAABKVBMVEUAAAD/////VVX/gED////////////////////2ajX3ZjP3ZC7////4ZjP4ajL4ZzD////4aS75ZjP////5ZzH5ay/5aC75aTL////6aC/6ZjP7ajD////////8ZzD5ZzD5ZzL5aDH5aTD5aDL5aDH5ZzH5aDD5aTL6ZzH6aTD6aDD6aDH6ZzH6aDD6aDL6aDH6ZzD6aDL6aDH////////////7aDL////////////////6aDL6aDH6aDH6aDL6aDH////7aDH////////////////////6aDD6aTH6aDH6aDH////7aDH7aDH7aDH5aDH6aDH////6aDH6aDH6aDH////6aDH////////6aDH6aDH6aDH////6aDH////6aDH6aDH6aDH///8Zq0PvAAAAYXRSTlMAAgMEBQoOExodHiEiIyQlJicoKSorLC4wMTI6RUdKT1JTVVZYWVtcXl9gYmNlZ2lqbG5vcHF2d3+ImJqboqSlpau+0NjZ3N3e3+Li4+Tl5ujo6ers7e7u8Pj6+/v8/P3+e2H/NQAAAAFiS0dEYiu5HTwAAAD8SURBVBgZ5cHnUsJAGAXQi7GLXSxR7L0r9t6xi6KixJC93/s/hJMhjhMM2f3vOQhJSOAOMRISuIRW90cpDZ2GK9mETu2ZnEBrT87roJORtyR0hr5Kaeh0FGQDOvUX8rztyyCadTAA9EugAMDet1Ch5pjvNhp3AztA3ytPLYQdkcyn8Ks3T/IQYcOfJF9S+NH5RLI4ggqjRZK5HpS1P5J0J/HHmEMy1wVf2wNJdwoRxh2S960Amm9IutOINOGQvG1B0zVJdwZVzHkks4NZkt4sqpr3WKaWEWPBo0+tINaiIqlWobGkqNagtc4tGLDxPyVNQExATEBMQExATHwD3j+HJum0iiAAAAAASUVORK5CYII="


          Bed = ""

          KnobUp = "iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAAAXNSR0IArs4c6QAACXBJREFUeF7tXUuMJEcRfTmzM7uz07tb2WAjARfgYr7+YMwFMFz4iqMtwWmRvF7bAoRlc+EngYALNuaP1zYCDiDxOSFb4nPgK1sIe/2RsTkAFywksLeze2b2P1uFXlMltXu3pzIiM6u7pyul1hwmIjIyXmVGRmRWlEHbZsoCZqa0aZVBC8iMPQQtIC0gegtYawsNt3Nubh68uVGUQLSAaB7HhDwtIAmNqxHdAqKxWkKeFpCExtWIbgHRWC0hTwtIQuNqRLeAaKyWkKcFJKFxNaJbQDRWS8jTApLQuBrRLSAaqyXkaQFJaFyh6FUAb7XW/kHINyR3zr0DwJ8BnNPwN8kzy8nFKwF8AMC7AdCgxlqrso1zjnzMFP8ewG8APAjgKZWwxEyzBshLABwG8GEA14yPPRCQcXHHAfwYwA8BvJDYzt7iZwWQKwB8HMAtnAmTtI8MSNUNZ869AO4H8Li35RIRThuQVwD4NIBbfcaXCJDRrr8L4IsA/u2jTwqaaQJyRzn4fb4DawAQqnIGwGcA3O2rV0y6aQBCZ/11ANdLB9IQIJVavwPwCQBPSvUMoW8akJvL9VrVb8OAVDsz+rX7Qows4VUZRtLBCO095ROnZB+eqat4y22virdk+hqA20ME+PI2BchPAdzgq1TDuyxftX4eYwx1naUGhBH2LwC8p04Rn/9PcYZU6v0awAdTRvypAflVGWn72LuWZgYAoY4c03trlVUSpAQkyjI1Oq4ZAYQq/QzAjUqb78iWCpBgBz6q9crKClZXV4c/TSuKAufPn8e5c+eGfyO1JI4+BSDc2h6LMei9e/eCv+Xl5RjihjIuXLiAs2fPDn8RGsfKlEu0FhsQBn3MBwXJ5YxYW1uLCsS4xQjM6dOnQ2cM82BXxwwegwx3icfitwDeGfK47N+/fzgrmmqcKadOnQrpjhH9u0IEjPLGBIS5qbu0inFZIhh79uzRilDzbW9vD0HhrFG2O2PlvmIB8nIA/wDgnSgcHThB6HQ6MCaWOnKz0vFvbW2B4CgaE5KviZEljmWB7/im0McHOwtgVDoFgsLU/W0KMF/EEgMQHi49q1GEy9SBAwemOjPG9SYom5ub2uXrtQD+prFFxRMDEPXsIBjT8Bl1BuOyRVAULXiWhALyUgD/1Wxzm95NSY2r3H1xG3wZgBPS/mLNENXOinEGnfisNzp5RWQftOMKnSG8ucHASNQOHjyYNOgTKbMDMbfBGxsbUnG0yZulTDFmCKPyJ6QdM+jjcjUvjfGJIs1ylTZ6D5khnwLwJalh52V2VONSzhLepPmy1DakDwGEKQPRRYV58R3jhlT4EnU6RQsI8+CMTkX86+vr6hS65mmLxcO0/cmTJyXiuNti1kJ8l1hk0BGN3gbgjxINSZtl2UwFgb76M1js9/u+5BXd2wH8ScqkBeRjAL4h6YwBIAPBeW0MFIV5LtroW9LxagERR+f79u0bnnHMa+PZyZkzXKW9mypq1wIivrwwr/6jMr/Cj6guQ2gBeRrA672fFQDztt0dH5ti+/tXAG+Q2Chk2/sfAJdLOptXh16NUeHYmeN7mcRGIYCclh5Gaa/wSAeUkl54JZUOR+w0tUtWLo1BFhAQxiJL0gekBURgMeEMaRQQ8ZK1gD6k0SVL7NQXcJfVqFMXb3sXMA55RhoahOyyfil9xWABI3W+uiB+DUPr1L8tvfKygLmsRlMnHwXwTcEGZUg6r45dERRyuI0mF1Xp93n1I8prQY2m31UHVLxpwlPDeWzCa0GNH1DRpt5HuLyzy9kxr2BUDxATjDw59LiUzSI3qrcAtE6dOnpdcqAzJxhLS+IswsxOJI+bKFO55FB7DWjervxInoCaJWwq14Co/8SLcjwdZOyxm9uEJYxvkF1UWsrXDiFLFvvgtcmvjHa2W/yFrwFJN7aETfUqKQuOPV+l4nejv/AFplzCpn7ZmvoOo/bd7C98QcnznA/n+weDwaO+PON0oUsW5V2xtrb27G73F0ID3+KcU70aHgRIp9O5bGVl5Qd8KoQKLwL5/c65o2XxTe/xqgGx1jI1QDBe7d3b4hEez/P8qGQJUwFirY1WrWEUozzPh1FwkxF9VdWBwWvMihFjz96tzjkW2qxtYkCyLPuqMSZ6MS++qcS0BDOr06rkkPI1u6IoHuj3+1zCeEFkYvMGpNPpXF76i/fVwiwk4BVNXtUcb9OodZJ4t/j40tLS0RMnTvxlkom8AMmy7HpjzPcBvEpo61pyj7zQcMawEhD/aooLSKsBcema1hJWC4i1ltPMa/2rtf4IAf0FlyjhjfLha9T80Wj8MWk5ChKNX/ki+iPKl/ZRqZlwCTvmnGNxzYvajoB0u917iqJgqdSobdRfRBWcQFjsJcwY82iv13uLdMlasdayVmL0UnaT/EUCW0YTGXEJK/I8v3YwGDApe8k2cYZYa98I4BEA67FG5uMvYvWVQs76+vpzq6urr9TKNsbc3Ov1dix4Vrdk3VAUBWsnBrWiKLa2trY62rU8qPN4zMM6i91u90hRFEyL1Prfsa4n+o1RulqhWZZ91hjzhYBxPbS9vX14c3OTp2jR/VGAXhLWF9VXPHTo0DXLy8vHiqK41lPIY845L9paQNihtfZH5Tc9PPv/P1lRFHf3+32eD1TtSFmP0atfUWdpiJlOn1hq3FrL3Sd3oTu20m88VkfH//saZtVaS3/ifRJmjDnS6/UeuIQSbypfGBW94+4zmMg0XsX4PZawo84579rxvoBwltCQBKWuLsbfAXzEOVf3SrD4cxWRDT5JnPhzFVzCjDH3GmPGt7P3lRlfb9W9AaHEbrd7Y1EUP9lB+oOlv/AtT8TSgPxWh9cHXbxHpScM+qCLtZb8VcB33DknLkIjAoTjzLLsc8aYz19izHc55z6ptIXXJ4+UsuvYqk8e8b37oGpw5UN7E3dheZ5fNxgMvPzGqIJiQMhsreXHtD5UCTLG3NTr9b5XN3KP/+/4UTAPfglJ9VEwnun4zmgv+VmWXd3v91Xfs1IBAmAvnbwxhlXIDvd6vYe9NJURXfTZPBn7RdScCfwOIl8TeEhbPilQh1p2LSBcuq7M8/xfGxsbvdpewgl4l/g6ALyA9rrylJIRM8vpHeQDUnbB+uGsOMbLBs8B+GdZoJN1vdoPS4bjsHgS1DNk8UzVzIhbQJqxs3cvLSDepmqGsAWkGTt799IC4m2qZghbQJqxs3cvLSDepmqGsAWkGTt79/I/bNVAkpmwYIIAAAAASUVORK5CYII="
        
          KnobRight = "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"
        
          KnobDown = "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"


        end; getImages()
    local layout = {}
    local graphics = {}
    local CurrentPage = PageNames[props["page_index"].Value]
  table.insert(graphics,{ --- Orange background -- SET
    Type = "GroupBox",
    Fill = {224,93,45},
    Radius = 3,
    Position = {5,5},
    ZOrder = -5,
    Size = {280,520}
  })
  table.insert(graphics,{ ---Black background -- SET
    Type = "GroupBox",
    Fill = {20,20,20},
    Radius = 1,
    Position = {25,35},
    ZOrder = -1,
    Size = {240,390}
  })
  layout["Online"] = {
    PrettyName = "Is Online",
    Style = "Button",
    IsReadOnly = true,
    ButtonVisualStyle = "Flat",
    ZOrder = 76,
    StrokeWidth = 0,
    Position = {235,38},
    Size = {28,28},
    Color = {34,34,34}
}
    if CurrentPage == "Monitor" then
 -----Monitor Page

       table.insert(graphics, { --Image Knob Upright -- SET
         Type = "Image",
         Image = KnobUp,
         Size = {87, 87},
         ZOrder = 40,
         Position = {99,431}
       })
       table.insert(graphics,{ --Status Text ---SET
          Type = "Text",
          Text = "Status",
          Position = {78,35},
          Size = {125,30},
          FontSize = 14,
          Color = {255,255,255},
          HTextAlign = "Center"
       })
       table.insert(graphics,{ --Current Job Text ---SET
          Type = "Text",
          Text = "Current Job",
          Position = {78,95},
          Size = {125,25},
          ZOrder = 20,
          FontSize = 14,
          Color = {255,255,255},
          HTextAlign = "Center"
       })
       table.insert(graphics, { --Image Nozzle ---SET
          Type = "Image",
          Image = Nozzle,
          Size = {26, 25},
          ZOrder = 44,
          Position = {33,355}
       })
       table.insert(graphics, { --Image Bed ---SET
          Type = "Image",
          Image = Bed,
          Size = {26, 27},
          ZOrder = 46,
          Position = {152,358}
       })
       table.insert(graphics, { --Image Spool ---SET
         Type = "Image",
         Image = Spool,
         Size = {27, 26},
         ZOrder = 70,
         Position = {193,395}
       })
       table.insert(graphics, { --Image Print Speed ---SET
         Type = "Image",
         Image = PrintSpeed,
         Size = {24, 19},
         ZOrder = 60,
         Position = {118,396}
       })
       table.insert(graphics, { --Image Z Height ---SET
         Type = "Image",
         Image = ZHeight,
         Size = {23, 21},
         ZOrder = 80,
         Position = {34,395}
       })
       table.insert(graphics,{ --Nozzle "/"  ---SET
         Type = "Text",
         Text = "/",
         Position = {85,362},
         Size = {25,20},
         ZOrder = 55,
         FontSize = 17,
         Color = {255,255,255},
         HTextAlign = "Center"
       })
       table.insert(graphics,{ --Nozzle "°C" 
         Type = "Text",
         Text = "°C",
         Position = {125,363},
         Size = {20,20},
         ZOrder = 57,
         FontSize = 14,
         Color = {255,255,255},
         HTextAlign = "Center"
       })
       table.insert(graphics,{ --Bed "/" 
         Type = "Text",
         Text = "/",
         Position = {202,362},
         Size = {25,20},
         ZOrder = 59,
         FontSize = 17,
         Color = {255,255,255},
         HTextAlign = "Center"
       })
       table.insert(graphics,{ --BED "°C" 
        Type = "Text",
        Text = "°C",
        Position = {242,363},
        Size = {20,20},
        ZOrder = 58,
        FontSize = 14,
        Color = {255,255,255},
        HTextAlign = "Center"
       })
       table.insert(graphics,{ --Graph "300°C" 
        Type = "Text",
        Text = "300°C",
        Position = {23,153},
        Size = {35,20},
        ZOrder = 101,
        FontSize = 9,
        Color = {240,240,240},
        HTextAlign = "Center"
       })
       table.insert(graphics,{ --Graph "225°C" 
        Type = "Text",
        Text = "225°C",
        Position = {22,190},
        Size = {35,20},
        ZOrder = 102,
        FontSize = 9,
        Color = {240,240,240},
        HTextAlign = "Right"
       })
       table.insert(graphics,{ --Graph "150°C" 
        Type = "Text",
        Text = "150°C",
        Position = {22,228},
        Size = {35,20},
        ZOrder = 103,
        FontSize = 9,
        Color = {240,240,240},
        HTextAlign = "Right"
       })
       table.insert(graphics,{ --Graph "75°C" 
        Type = "Text",
        Text = "75°C",
        Position = {22,266},
        Size = {35,20},
        ZOrder = 104,
        FontSize = 9,
        Color = {240,240,240},
        HTextAlign = "Right"
       })
       table.insert(graphics,{ --Graph "0°C" 
        Type = "Text",
        Text = "0°C",
        Position = {22,303},
        Size = {35,20},
        ZOrder = 105,
        FontSize = 9,
        Color = {240,240,240},
        HTextAlign = "Right"
       })

            ----Layout controls


       layout["nGraph"] = {
        PrettyName = "Temp Graph",
        Style = "Button",
        Radius = 2,
        StrokeWidth = 0,
        ButtonVisualStyle = "Flat",
        Position = {44,160},
        Size = {222,155},
        ZOrder = 100,
        Color = {20, 20, 20},
        OffColor = {20, 20, 20}
       }
       layout["bGraph"] = {
        PrettyName = "Temp Graph",
        Style = "Button",
        Radius = 2,
        StrokeWidth = 0,
        ButtonVisualStyle = "Flat",
        Position = {44,160},
        Size = {222,155},
        ZOrder = 100,
        Color = {20, 20, 20},
        OffColor = {20, 20, 20}
       }
       layout["Status"] = {
           PrettyName = "Printer Status",
           Style = "Text",
           Position = {60,65},
           TextBoxStyle = "NoBackground",
           TextColor={255,255,255},
           Size = {160,30},
           FontSize = 13
       }
       layout["Print Speed"] = {
            PrettyName = "Print Speed",
            Style = "Text",
            TextBoxStyle = "NoBackground",
            TextColor = {255,255,255},
            Position = {147,394},
            Size = {40,29},
            FontSize = 17
       }
       layout["Nozzle Temp"] = {
            PrettyName = "Nozzle Actual",
            Style = "Text",
            TextBoxStyle = "NoBackground",
            TextColor = {255,255,255},
            Position = {63,358},
            Size = {32,28},
            FontSize = 14
       } 
       layout["Nozzle Target"] = {
            PrettyName = "Nozzle Target",
            Style = "Text",
            TextBoxStyle = "NoBackground",
            TextColor = {255,255,255},
            Position = {99,358},
            Size = {32,28},
            FontSize = 14
       }
       layout["Bed Temp"] = {
            PrettyName = "Bed Actual",
            Style = "Text",
            TextBoxStyle = "NoBackground",
            TextColor = {255,255,255},
            Position = {179,358},
            Size = {32,28},
            FontSize = 14
       }
       layout["Bed Target"] = {
            PrettyName = "Bed Target",
            Style = "Text",
            TextBoxStyle = "NoBackground",
            TextColor = {255,255,255},
            Position = {216,358},
            Size = {32,28},
            FontSize = 14
       }
       layout["Job"] = {
           PrettyName = "Current Job",
           Style = "Text",
           Position = {60,120},
           TextBoxStyle = "NoBackground",
           TextColor={255,255,255},
           Size = {160,30},
           FontSize = 13
       }
       layout["Material"] = {
            PrettyName = "Loaded Filament",
            Style = "Text",
            TextBoxStyle = "NoBackground",
            TextColor={255,255,255},
            Position = {215,390},
            Size = {50,35},
            FontSize = 17
       }
       layout["Z Height"] = {
            PrettyName = "Z Height",
            Style = "Text",
            TextBoxStyle = "NoBackground",
            TextColor={255,255,255},
            Position = {57,390},
            Size = {50,35},
            FontSize = 17
       }

    elseif CurrentPage == "Control" then      
      
 -----Control Page

       table.insert(graphics, { --Image Knob Right -- SET
         Type = "Image",
         Image = KnobRight,
         Size = {87, 87},
         ZOrder = 40,
         Position = {103,435}
       })
       layout["Print"] = {
        PrettyName = "Print",
        Style = "Button",
        Radius = 4,
        FontSize = 12,
        StrokeColor = {255,255,255},
        StrokeWidth = 0,
        ButtonVisualStyle = "Flat",
        Position = {34,285},
        Legend = "Start Print",
        Size = {102,33},
        Color = {53,169,19}
       }
       layout["Delete"] = {
        PrettyName = "Delete File",
        Style = "Button",
        Radius = 4,
        FontSize = 12,
        StrokeColor = {255,255,255},
        StrokeWidth = 0,
        ButtonVisualStyle = "Flat",
        Position = {140,285},
        Legend = "Delete",
        Size = {102,33},
        Color = {190,0,0}
       }
       layout["Pause"] = {
        PrettyName = "Pause",
        Style = "Button",
        Radius = 2,
        FontSize = 12,
        StrokeColor = {255,255,255},
        StrokeWidth = 0,
        ButtonVisualStyle = "Flat",
        Position = {34,323},
        Legend = "Pause Print",
        Size = {102,33},
        Color = {91,91,91}
       }
       layout["Stop"] = {
        PrettyName = "Stop",
        Style = "Button",
        Radius = 2,
        FontSize = 12,
        StrokeColor = {255,255,255},
        StrokeWidth = 0,
        ButtonVisualStyle = "Flat",
        Position = {34,361},
        Legend = "Stop Print",
        Size = {102,33},
        Color = {190,0,0}
       }
       layout["Files"] = {
        PrettyName = "Files",
        Style = "ListBox",
        Color = {0,0,0},
        StrokeWidth = 0,
        TextColor = {255,255,255},
        Position = {31,66},
        Size = {228,217},
        ZOrder = 115,
        FontSize = 14
       }

    elseif CurrentPage == "Setup" then        
        
 -----Setup Page

       table.insert(graphics, { --Image Knob Down -- SET
         Type = "Image",
         Image = KnobDown,
         Size = {87, 87},
         ZOrder = 40,
         Position = {100,438}
       })
       table.insert(graphics,{ --Printer IP Text ---SET
          Type = "Text",
          Text = "Printer IP",
          Position = {80,35},
          Size = {125,30},
          FontSize = 14,
          Color = {255,255,255},
          HTextAlign = "Center"
       })
       table.insert(graphics,{ --API Key Text ---SET
          Type = "Text",
          Text = "API Key",
          Position = {80,95},
          Size = {125,25},
          ZOrder = 20,
          FontSize = 14,
          Color = {255,255,255},
          HTextAlign = "Center"
       })
       table.insert(graphics,{ --Text
          Type = "Text",
          Text = "Text about this plugin",
          Position = {30,160},
          Size = {230,155},
          FontSize = 18,
          Color = {220,220,220},
          HTextAlign = "Left"
       })
       layout["API Key"] = {
           PrettyName = "API Key",
           Style = "Text",
           Position = {65,120},
           Size = {160,30},
           FontSize = 16
       }
       layout["Printer IP"] = {
           PrettyName = "Printer IP",
           Style = "Text",
           Position = {65,65},
           Size = {160,30},
           FontSize = 18
       }
       layout["Online"] = {
           PrettyName = "Is Online",
           Style = "Button",
           IsReadOnly = true,
           ButtonVisualStyle = "Flat",
           ZOrder = 76,
           StrokeWidth = 0,
           Position = {235,38},
           Size = {28,28},
           Color = {34,34,34}
       }
  
     end
   return layout, graphics
  end
  
--Start event based logic
if Controls then
    --Variables--
 IP = Controls["Printer IP"].String
 KEY = Controls["API Key"].String
 rapidjson = require("rapidjson")
 polling = Timer.New() 
 EzSVG = require "EzSVG"
 nTimer = Timer.New()
 bTimer = Timer.New()
 Controls.Online.IsInvisible = true 
-----API GETS--------
  
function Printer()
     
      HttpClient.Download{ 
        Url          = "http://"..IP.."/api/v1/status",
        Headers = {["X-Api-Key"]= KEY},
        ["Content-Type"] = "application/json",
        Method       = "GET",
        EventHandler = PrinterParse}
      end
function Job()
      HttpClient.Download{ 
       Url          = "http://"..IP.."/api/v1/job",
       Headers = {["X-Api-Key"]= KEY},
       ["Content-Type"] = "application/json",
       Method       = "GET",
       EventHandler = JobParse} 
      end
function Files()
      HttpClient.Download{ 
       Url          = "http://"..IP.."/api/v1/files",
       Headers = {["X-Api-Key"]= KEY},
       ["Content-Type"] = "application/json",
       Method       = "GET",
       EventHandler = FilesParse}  
      end 


-----Parse Repsonses-----
  
function Poll()
    if IP ~= "" then
      Timer.CallAfter(Printer, 1)
      Timer.CallAfter(Job, 2)
      Timer.CallAfter(Files, 3)
    else
    end 
end
function PrinterParse(tbl, code, data, e)
     print("PRINTER: "..string.format("Response Code: %i\t\tErrors: %s\rData: %s",code, e or "None", data))

      if (code == 200) then
        Controls.Online.IsInvisible = false
        else
        Controls.Online.IsInvisible = true
      end 

      response = data
      responsetbl = rapidjson.decode(response)
      NTempAct = responsetbl.printer.temp_nozzle
      if NTempAct then
        Controls["Nozzle Temp"].Value = NTempAct
      end
      NTempTarg = responsetbl.printer.target_nozzle
      if NTempTarg then
        Controls["Nozzle Target"].Value = NTempTarg
      end
      BTempAct = responsetbl.printer.temp_bed
      if BTempAct then
        Controls["Bed Temp"].Value = BTempAct
      end
      BTempTarg = responsetbl.printer.target_bed
      if BTempTarg then
        Controls["Bed Target"].Value = BTempTarg
      end
      PSpeed = responsetbl.printer.speed
      if PSpeed then
       Controls["Print Speed"].Value = PSpeed
      end
      ZHi = responsetbl.printer.axis_z
      if ZHi then
       Controls["Z Height"].Value = ZHi
      end
     --[[
     -- depericated Fil = string.match(data, "%a+", 94)
     if Fil then 
        Controls.Material.String = Fil
     end
--]]
  end
function JobParse(tbl, code, data, e)
    print("JOB: "..string.format("Response Code: %i\t\tErrors: %s\rData: %s",code, e or "None", data))
     local response = data
     responsetbl = rapidjson.decode(response)
  
     State = responsetbl.state
      if State then 
       Controls.Status.String = State
      end
  
     Job = responsetbl.job
      if Job ~= "" then
       Controls.Job.String = "No Current Job"
      else 
       Controls.Job.String = Job
      end
  
      Progress = responsetbl.progress
       if Progress ~= "" then
        Controls.Progress.String = "No Current Job"
       else 
        Controls.Progress.String = Progress
      end
  end
function FilesParse(tbl, code, data, e)
  print("FILES: "..string.format("Response Code: %i\t\tErrors: %s\rData: %s",code, e or "None", data))
  local response = data
  responsetbl = rapidjson.decode(response)

 -- Extract the "display" values, friendly name for files in local storage
 local displays = {}
 for _, file in ipairs(responsetbl.files) do
    for _, child in ipairs(file.children) do
        table.insert(displays, child.display)
    end
 end
Controls["Files"].Choices = displays
 -- Print the "display" values
for _, display in ipairs(displays) do
    print(displays)
end
end
-----API POSTS--------

--[[function STARTPRINT()
  local Selected = Controls.Files.String
   HttpClient.Download{ 
    Url          = "http://"..IP.."/api/files".."/usb"..Selected,
    Headers = {["X-Api-Key"]= KEY},
    ["Content-Type"] = "application/json",
    Method       = "POST",
    }  
   end 
end
]]--

-----EZSVG Nozzle/Bed Temp Graphs-----

function ndraw(values) --Draws Nozzle temp to nGraph + static graph structer
    -- create a document
     local doc = EzSVG.Document(800, 600)
     EzSVG.setStyle({
         stroke_width= 1,
         stroke= "White"
     })
   
     doc:add(EzSVG.Line(0, 0, 0, 599)) --left side veritcal line
     doc:add(EzSVG.Line(0, 599, 800, 599)) -- Bottom Line
     doc:add(EzSVG.Line(800, 1, 0, 1)) -- top line
     doc:add(EzSVG.Line(800, 150, 0, 150))
     doc:add(EzSVG.Line(800, 300, 0, 300))
     doc:add(EzSVG.Line(800, 450, 0, 450))
   
   
     -- create a path object and set its styling
     local npath = EzSVG.Path({
         stroke = "red",
         stroke_width = 3,
         fill = "red",
         fill_opacity = "0"
     }) 
     
     step = 800 / (#nvalues-1)
     npath:moveToA( 0,800)
     for k,v in ipairs(nvalues) do
       npath:lineToA((k-1)*step,(1-v)*600)
     end
     npath:lineToA(820,0)
     -- add path to the doc
     doc:add(npath)
     return doc:toString("Design\\Nozzle-Temp.svg")
   end
   
   nvalues = { }
   for i = 1,100 do table.insert(nvalues, 0.5) end
   
     Controls.nGraph.Legend = rapidjson.encode({
       DrawChrome = false, -- Draw the button face and edges
       IconData = Crypto.Base64Encode(ndraw(nvalues)),
     })
   
   
function NozEZSvG()
     table.insert(nvalues, Controls["Nozzle Temp"].Position)
     Controls.nGraph.Legend = rapidjson.encode({
       DrawChrome = false, -- Draw the button face and edges
       IconData = Crypto.Base64Encode(ndraw(nvalues)),
     })
   end 
--
function bdraw(values) --Draws Bed temp to bGraph. bGraph same position as nGraph within plugin
    -- create a document
     local doc = EzSVG.Document(800, 600)
     -- create a path object and set its styling
     local bpath = EzSVG.Path({
         stroke = "blue",
         stroke_width = 3,
         fill = "blue",
         fill_opacity = "0"
     }) 
     
     bstep = 800 / (#bvalues-1)
     bpath:moveToA( 0,800)
     for k,v in ipairs(bvalues) do
       bpath:lineToA((k-1)*step,(1-v)*600)
     end
     bpath:lineToA(820,0)
     -- add path to the doc
     doc:add(bpath)
     return doc:toString("Design\\Bed-Temp.svg")
   end
   
   bvalues = { }
   for i = 1,100 do table.insert(bvalues, 0.5) end
   
     Controls.bGraph.Legend = rapidjson.encode({
       DrawChrome = false, -- Draw the button face and edges
       IconData = Crypto.Base64Encode(bdraw(bvalues)),
     })
   
   
function BedEZSVG()
     table.insert(bvalues, Controls["Bed Temp"].Position)
     Controls.bGraph.Legend = rapidjson.encode({
       DrawChrome = false, -- Draw the button face and edges
       IconData = Crypto.Base64Encode(bdraw(bvalues)),
     })
   end 


nTimer:Start(1)
bTimer:Start(1)
polling:Start(2)
--Print.EventHandler = STARTPRINT
polling.EventHandler = Poll
bTimer.EventHandler = BedEZSVG
nTimer.EventHandler = NozEZSvG
end
